{
  // Place your frontend-project-structure workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "create functional component": {
    "scope": "typescript,typescriptreact",
    "prefix": "crsc",
    "body": [
      "import React from 'react';",
      "",
      "export default function ${TM_FILENAME_BASE}() {",
      "  return(",
      "       <>",
      "       </>",
      "    )",
      "}"
    ]
  },

  "create functional component with props": {
    "scope": "typescript,typescriptreact",
    "prefix": "crscp",
    "body": [
      "import React from 'react';",
      "",
      "type TProps = {",
      "};",
      "",
      "export default function ${TM_FILENAME_BASE}(props) {",
      "  const {} = props;",
      "",
      "  return(",
      "       <>",
      "       </>",
      "    )",
      "}",
      "",
      "${TM_FILENAME_BASE}.defaultProps = {",
      "};"
    ]
  },

  "styled react functional component": {
    "prefix": "srfc",
    "body": [
      "import React from 'react';",
      "import styled from 'styled-components';",
      "",
      "const Styled${TM_FILENAME_BASE} = styled.div``;",
      "",
      "export default function ${TM_FILENAME_BASE}() {",
      "  return (",
      "    <Styled${TM_FILENAME_BASE}>",
      "      ",
      "    </Styled${TM_FILENAME_BASE}>",
      "  );",
      "};",
      ""
    ]
  }
}
